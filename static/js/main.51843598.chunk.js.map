{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/Navigation/Navigation.tsx","pages/HomePage/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","pages/PeoplePage/PeoplePage.tsx","pages/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","name","className","isActive","cn","handlerActiveLink","Navigation","role","HomePage","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","sex","PeoplePage","useState","people","setPeople","isPeopleLoading","setIsPeopleLoading","error","setError","useParams","selectedPerson","loadPeople","data","useEffect","isPersonIncludes","find","length","map","mother","motherName","father","fatherName","born","died","NotFoundPage","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.51843598.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\ntype Props = {\n  to: string;\n  name: string;\n};\n\nexport const PageNavLink: FC<Props> = ({ to, name }) => {\n  const handlerActiveLink = (isActive: boolean) => {\n    return cn('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    });\n  };\n\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => handlerActiveLink(isActive)}\n    >\n      {name}\n    </NavLink>\n  );\n};\n","import { PageNavLink } from '../PageNavLink';\n\nexport const Navigation = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" name=\"Home\" />\n        <PageNavLink to=\"/people\" name=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import { FC } from 'react';\n\nexport const HomePage: FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: FC<Props> = ({ person }) => {\n  const baseUrl = '/people/';\n\n  return (\n    <Link to={`${baseUrl}${person.slug}`}>\n      <span className={cn({ 'has-text-danger': person.sex === 'f' })}>\n        {person.name}\n      </span>\n    </Link>\n  );\n};\n","import { FC, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { getPeople } from '../../api';\nimport { Loader } from '../../components/Loader';\nimport { PersonLink } from '../../components/PersonLink';\nimport { Person } from '../../types/Person';\n\nexport const PeoplePage: FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isPeopleLoading, setIsPeopleLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  const { selectedPerson = 0 } = useParams();\n\n  const loadPeople = async () => {\n    try {\n      const data = await getPeople();\n\n      setPeople(data);\n    } catch {\n      setError(true);\n    } finally {\n      setIsPeopleLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  const isPersonIncludes = (name: string | null) => {\n    return people.find(person => person.name === name) || null;\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isPeopleLoading && <Loader />}\n\n          {error && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {(people.length === 0 && !isPeopleLoading) && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length > 0 && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map(person => {\n                  const mother = isPersonIncludes(person.motherName);\n                  const father = isPersonIncludes(person.fatherName);\n\n                  return (\n                    <tr\n                      data-cy=\"person\"\n                      key={person.slug}\n                      className={cn({\n                        // eslint-disable-next-line\n                        'has-background-warning': person.slug === selectedPerson,\n                      })}\n                    >\n                      <td>\n                        <PersonLink\n                          person={person}\n                        />\n                      </td>\n\n                      <td>{person.sex}</td>\n                      <td>{person.born}</td>\n                      <td>{person.died}</td>\n\n                      {mother\n                        ? (\n                          <td>\n                            <PersonLink\n                              person={mother}\n                            />\n                          </td>\n                        )\n                        : (\n                          <td>{person.motherName || ('-')}</td>\n                        )}\n\n                      {father\n                        ? (\n                          <td>\n                            <PersonLink\n                              person={father}\n                            />\n                          </td>\n                        )\n                        : (\n                          <td>{person.fatherName || ('-')}</td>\n                        )}\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { FC } from 'react';\n\nexport const NotFoundPage: FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { Navigation } from './components/Navigation';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":selectedPerson\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}