{"version":3,"sources":["components/Navigation/Navigation.tsx","pages/HomePage/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","pages/PeoplePage/PeoplePage.tsx","pages/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["Navigation","handlerActiveLink","isActive","cn","className","role","to","HomePage","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","sex","name","PeoplePage","useState","people","setPeople","isPeopleLoading","setIsPeopleLoading","error","setError","useParams","currentPerson","loadPeople","data","useEffect","isPersonIncludes","find","length","map","mother","motherName","father","fatherName","born","died","NotFoundPage","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.41377894.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nexport const Navigation = () => {\n  const handlerActiveLink = (isActive: boolean) => {\n    return cn('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    });\n  };\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => handlerActiveLink(isActive)}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={({ isActive }) => handlerActiveLink(isActive)}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { FC } from 'react';\n\nexport const HomePage: FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: FC<Props> = ({ person }) => {\n  const baseUrl = '/people/';\n\n  return (\n    <Link to={`${baseUrl}${person.slug}`}>\n      <span className={cn({ 'has-text-danger': person.sex === 'f' })}>\n        {person.name}\n      </span>\n    </Link>\n  );\n};\n","import { FC, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { getPeople } from '../../api';\nimport { Loader } from '../../components/Loader';\nimport { PersonLink } from '../../components/PersonLink';\nimport { Person } from '../../types/Person';\n\nexport const PeoplePage: FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isPeopleLoading, setIsPeopleLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  const { currentPerson = 0 } = useParams();\n\n  const loadPeople = async () => {\n    try {\n      const data = await getPeople();\n\n      setPeople(data);\n    } catch {\n      setError(true);\n    } finally {\n      setIsPeopleLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  const isPersonIncludes = (name: string | null) => {\n    return people.find(person => person.name === name) || null;\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isPeopleLoading && <Loader />}\n\n          {error && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {(people.length === 0 && !isPeopleLoading) && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length > 0 && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map(person => {\n                  const mother = isPersonIncludes(person.motherName);\n                  const father = isPersonIncludes(person.fatherName);\n\n                  return (\n                    <tr\n                      data-cy=\"person\"\n                      key={person.slug}\n                      className={cn({\n                        'has-background-warning': person.slug === currentPerson,\n                      })}\n                    >\n                      <td>\n                        <PersonLink\n                          person={person}\n                        />\n                      </td>\n\n                      <td>{person.sex}</td>\n                      <td>{person.born}</td>\n                      <td>{person.died}</td>\n\n                      {mother\n                        ? (\n                          <td>\n                            <PersonLink\n                              person={mother}\n                            />\n                          </td>\n                        )\n                        : (\n                          <td>{person.motherName ? person.motherName : '-'}</td>\n                        )}\n\n                      {father\n                        ? (\n                          <td>\n                            <PersonLink\n                              person={father}\n                            />\n                          </td>\n                        )\n                        : (\n                          <td>{person.fatherName ? person.fatherName : '-'}</td>\n                        )}\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { FC } from 'react';\n\nexport const NotFoundPage: FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { Navigation } from './components/Navigation';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":currentPerson\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}